@model S_me.Models.Sanpham

@{
    ViewBag.Title = "SpThem";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}
<link href="~/Content/css/Product.css" rel="stylesheet" />
<link href="~/Content/css/index.css" rel="stylesheet" />
<link href="~/Content/css/Admin.css" rel="stylesheet" />

<center>
    <h2>Thêm sản phẩm</h2>


    @using (Html.BeginForm("Create", "Sanphams", FormMethod.Post,
    new
    {
        enctype = "multipart/form-data",
        @class = "form-horizontal",
        role = "form"
    }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PictureUpload, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PictureUpload, new
                    {
                        type = "file",
                        @class = "form-control"
                    })
                    @Html.ValidationMessageFor(model => model.Picture, "", new
                    {
                        @class = "text-danger"
                    })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.PictureUpload2, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PictureUpload2, new
                    {
                        type = "file",
                        @class = "form-control"
                    })
                    @Html.ValidationMessageFor(model => model.Picture2, "", new
                    {
                        @class = "text-danger"
                    })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Rated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rated, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Storage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Storage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Storage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CatID, "CatID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CatID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CatID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default buy-button" />
                </div>
            </div>
        </div>
    }

    <div>
        <button class="buy-button">
            @Html.ActionLink("Back to List", "QLSanpham")
        </button>
    </div>
</center>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
